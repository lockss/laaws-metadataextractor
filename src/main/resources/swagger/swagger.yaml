openapi: 3.0.3
info:
  title: LOCKSS Metadata Extraction Service REST API
  description: REST API of the LOCKSS Metadata Extraction Service
  contact:
    name: LOCKSS Support
    url: https://www.lockss.org/
    email: lockss-support@lockss.org
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  version: 2.0.0
servers:
- url: https://laaws.lockss.org:443/
security:
- basicAuth: []
tags:
- name: Default
  description: Default section
- name: mdupdates
  description: Metadata updates
paths:
  /mdupdates:
    get:
      tags:
      - mdupdates
      summary: Get a list of currently active jobs
      description: Get a list of all currently active jobs or a pageful of the list
        defined by the continuation token and size
      operationId: getMdupdates
      parameters:
      - name: limit
        in: query
        description: The number of jobs per page
        schema:
          type: integer
          default: 50
      - name: continuationToken
        in: query
        description: The continuation token of the next page of jobs to be returned
        schema:
          type: string
      responses:
        200:
          description: The requested jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobPageInfo'
        default:
          description: The resulting error payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResult'
    post:
      tags:
      - mdupdates
      summary: Perform an AU metadata update operation
      description: Perform an AU metadata update operation given the update specification
      operationId: postMdupdates
      parameters:
      - name: force
        in: query
        description: An indication of whether to force the operation regardless of
          the current state of the AU
        schema:
          type: boolean
          default: true
      requestBody:
        description: The information defining the AU metadata update operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metadataUpdateSpec'
        required: true
      responses:
        202:
          description: The job created to perform the AU metadata update operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        default:
          description: The resulting error payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResult'
      x-codegen-request-body-name: metadataUpdateSpec
    delete:
      tags:
      - mdupdates
      summary: Delete all of the currently queued and active jobs
      description: Delete all of the currently queued and active jobs
      operationId: deleteMdupdates
      responses:
        200:
          description: Count of jobs successfully deleted
          content:
            application/json:
              schema:
                type: integer
                format: int32
        default:
          description: The resulting error payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResult'
  /mdupdates/{jobid}:
    get:
      tags:
      - mdupdates
      summary: Get a job
      description: Get a job given the job identifier
      operationId: getMdupdatesJobid
      parameters:
      - name: jobid
        in: path
        description: The identifier of the requested job
        required: true
        schema:
          type: string
      responses:
        200:
          description: The status of the requested job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        default:
          description: The resulting error payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResult'
    delete:
      tags:
      - mdupdates
      summary: Delete a job
      description: Delete a job given the job identifier, stopping any current processing,
        if necessary
      operationId: deleteMdupdatesJobid
      parameters:
      - name: jobid
        in: path
        description: The identifier of the job to be deleted
        required: true
        schema:
          type: string
      responses:
        200:
          description: The deleted job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        default:
          description: The resulting error payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResult'
  /status:
    get:
      tags:
      - status
      summary: Get the status of the service
      description: Get the status of the service
      operationId: getStatus
      responses:
        200:
          description: The status of the service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
        default:
          description: The resulting error payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResult'
components:
  schemas:
    errorResult:
      type: object
      required:
      - message
      - code
      properties:
        message:
          type: string
        code:
          type: integer
        rootCause:
          type: string
    status:
      required:
      - code
      - msg
      type: object
      properties:
        code:
          type: integer
          description: The numeric value for the current state
          format: int32
        msg:
          type: string
          description: A text message defining the current state
      description: The existing state of a job
    job:
      required:
      - au
      - creationDate
      - id
      - status
      type: object
      properties:
        au:
          $ref: '#/components/schemas/au'
        id:
          type: string
          description: The identifier of this job
        description:
          type: string
          description: A description of the task being performed by this job
        creationDate:
          type: string
          description: The timestamp when this job was created
          format: date
        startDate:
          type: string
          description: The timestamp when this job processing started
          format: date
        endDate:
          type: string
          description: The timestamp when this job processing ended
          format: date
        status:
          $ref: '#/components/schemas/status'
      description: An asynchronous task to be performed
    au:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The identifier of this AU
        job:
          type: string
          description: The identifier of the job associated with this AU
        name:
          type: string
          description: The name of the AU, for display purposes
      description: An Archival Unit
    jobPageInfo:
      required:
      - jobs
      - pageInfo
      type: object
      properties:
        jobs:
          type: array
          description: The jobs displayed in the page
          items:
            $ref: '#/components/schemas/job'
        pageInfo:
          $ref: '#/components/schemas/pageInfo'
      description: A display page of jobs
    pageInfo:
      required:
      - continuationToken
      - curLink
      - resultsPerPage
      - totalCount
      type: object
      properties:
        totalCount:
          type: integer
          description: The total number of elements to be paginated
          format: int32
        resultsPerPage:
          type: integer
          description: The number of results per page
          format: int32
        continuationToken:
          type: string
          description: The continuation token
        curLink:
          type: string
          description: The link to the current page
        nextLink:
          type: string
          description: The link to the next page
      description: The information related to pagination of content
    metadataUpdateSpec:
      required:
      - auid
      - updateType
      type: object
      properties:
        auid:
          type: string
          description: The identifier of the AU for which the metadata update is to
            be performed
        updateType:
          type: string
          description: The type of metadata update to be performed
          example: full_extraction | incremental_extraction | delete
      description: The information defining an AU metadata update operation
    apiStatus:
      required:
      - apiVersion
      - ready
      type: object
      properties:
        apiVersion:
          type: string
          description: The version of the API
        componentName:
          type: string
          description: The name of the component
        componentVersion:
          type: string
          description: The version of the component software
        lockssVersion:
          type: string
          description: The version of the LOCKSS system
        ready:
          type: boolean
          description: The indication of whether the service is available
        serviceName:
          type: string
          description: The name of the service
        readyTime:
          type: integer
          description: The time the service last became ready.
          format: int64
        reason:
          type: string
          description: The reason the service isn't ready.
        startupStatus:
          type: string
          description: Enum indicating progress of plugin/AU processing at startup.
          enum:
          - NONE
          - PLUGINS_CRAWLING
          - PLUGINS_COLLECTED
          - PLUGINS_LOADING
          - PLUGINS_LOADED
          - AUS_STARTING
          - AUS_STARTED
      description: The status information of the service
  securitySchemes:
    basicAuth:
      type: http
      description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
      scheme: basic
